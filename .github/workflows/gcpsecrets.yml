name: Build and Push to GCP Artifact Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v5

      # 2️⃣ Read GCP configuration from the GitHub secret MY_JSON_SECRET
      - name: Read GCP Config
        run: |
          echo "Reading GCP config from MY_JSON_SECRET..."
          echo '${{ secrets.MY_JSON_SECRET }}' | jq . > config.json
          echo "✅ Created config.json:"
          cat config.json
          
          # Extract values from JSON
          GCP_PROJECT_ID=$(jq -r '.GCP_PROJECT_ID' config.json)
          GCP_REPO_NAME=$(jq -r '.GCP_REPO_NAME' config.json)
          
          echo "GCP_PROJECT_ID=$GCP_PROJECT_ID" >> $GITHUB_ENV
          echo "GCP_REPO_NAME=$GCP_REPO_NAME" >> $GITHUB_ENV
          echo "GCP_REGION=us-central1" >> $GITHUB_ENV

      # 3️⃣ Authenticate to Google Cloud using service account JSON key
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 4️⃣ Configure Docker to use Artifact Registry
      - name: Configure Docker for GCP Artifact Registry
        run: |
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet

      # 5️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t calc-gh:latest .

      # 6️⃣ Tag Docker image for Artifact Registry
      - name: Tag Docker image
        run: |
          IMAGE_URI="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME/calc-gh:latest"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker tag calc-gh:latest $IMAGE_URI

      # 7️⃣ Push image to Artifact Registry
      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.IMAGE_URI }}

      # 8️⃣ Verify the pushed image
      - name: Verify image pushed
        run: |
          echo "✅ Successfully pushed image to:"
          echo "${{ env.IMAGE_URI }}"

name: Calc App GitHub Actions

on:
  push:
    branches:
      - main

jobs:
  # ----------------------------
  # BUILD & PUSH IMAGE TO ECR
  # ----------------------------
  build-and-push:
    runs-on: ubuntu-latestt

    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v5

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      # 3. Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 557690603016.dkr.ecr.ap-south-1.amazonaws.com

      # 4. Build Docker image
      - name: Build Docker image
        run: docker build -t calc-gh .

      # 5. Tag Docker image with build number
      - name: Tag Docker image
        id: tag
        run: |
          IMAGE_TAG=${{ github.run_number }}
          ECR_URI=557690603016.dkr.ecr.ap-south-1.amazonaws.com/calc-gh
          docker tag calc-gh:latest $ECR_URI:$IMAGE_TAG
          docker tag calc-gh:latest $ECR_URI:latest
          echo "IMAGE_URI=$ECR_URI:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 6. Push Docker images
      - name: Push Docker images
        run: |
          ECR_URI=557690603016.dkr.ecr.ap-south-1.amazonaws.com/calc-gh
          docker push $ECR_URI:latest
          docker push $ECR_URI:${{ github.run_number }}

  # ----------------------------
  # TRIVY & GITLEAKS SCANS
  # ----------------------------
  Trivy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy FS Scan
        run: trivy fs --format table -o fs-report.json .

      - name: Install Gitleaks
        run: sudo apt-get install -y gitleaks

      - name: Run Gitleaks Scan
        run: gitleaks detect -s . -r gitleaks-report.json -f json

  # ----------------------------
  # SONARQUBE JOB
  # ----------------------------
  sonar_job:
    needs: Trivy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Recommended for better analysis accuracy

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # ----------------------------
  # ECS DEPLOYMENT JOB
  # ----------------------------
  deploy:
    needs: sonar_job
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      # Download current ECS Task Definition
      - name: Download current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition Actions-Calc-TD \
            --query taskDefinition > taskdef.json

      # Clean up unneeded fields and update the image
      - name: Prepare new task definition JSON
        id: prepare-task
        run: |
          IMAGE_URI=557690603016.dkr.ecr.ap-south-1.amazonaws.com/calc-gh:${{ github.run_number }}
          
          # Remove read-only fields and update image
          jq 'del(
              .taskDefinitionArn,
              .revision,
              .status,
              .requiresAttributes,
              .compatibilities,
              .registeredAt,
              .registeredBy
            ) | .containerDefinitions[0].image="'$IMAGE_URI'"' taskdef.json > new-taskdef.json

      # Register new task definition
      - name: Register new task definition
        id: register-task
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-taskdef.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      # Deploy the new revision to ECS service
      - name: Deploy updated task definition to ECS service
        run: |
          aws ecs update-service \
            --cluster Actions-Calc-Cluster \
            --service Actions-Calc-TD-service-f69zyief \
            --task-definition $TASK_DEF_ARN \
            --force-new-deployment

